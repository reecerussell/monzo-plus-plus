// Code generated by protoc-gen-go. DO NOT EDIT.
// source: registry_service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterType) Reset()         { *m = RegisterType{} }
func (m *RegisterType) String() string { return proto.CompactTextString(m) }
func (*RegisterType) ProtoMessage()    {}
func (*RegisterType) Descriptor() ([]byte, []int) {
	return fileDescriptor_87c38026d9d86ac5, []int{0}
}

func (m *RegisterType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterType.Unmarshal(m, b)
}
func (m *RegisterType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterType.Marshal(b, m, deterministic)
}
func (m *RegisterType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterType.Merge(m, src)
}
func (m *RegisterType) XXX_Size() int {
	return xxx_messageInfo_RegisterType.Size(m)
}
func (m *RegisterType) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterType.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterType proto.InternalMessageInfo

func (m *RegisterType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterType) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type UnregisterType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterType) Reset()         { *m = UnregisterType{} }
func (m *UnregisterType) String() string { return proto.CompactTextString(m) }
func (*UnregisterType) ProtoMessage()    {}
func (*UnregisterType) Descriptor() ([]byte, []int) {
	return fileDescriptor_87c38026d9d86ac5, []int{1}
}

func (m *UnregisterType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterType.Unmarshal(m, b)
}
func (m *UnregisterType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterType.Marshal(b, m, deterministic)
}
func (m *UnregisterType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterType.Merge(m, src)
}
func (m *UnregisterType) XXX_Size() int {
	return xxx_messageInfo_UnregisterType.Size(m)
}
func (m *UnregisterType) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterType.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterType proto.InternalMessageInfo

func (m *UnregisterType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetHostType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostType) Reset()         { *m = GetHostType{} }
func (m *GetHostType) String() string { return proto.CompactTextString(m) }
func (*GetHostType) ProtoMessage()    {}
func (*GetHostType) Descriptor() ([]byte, []int) {
	return fileDescriptor_87c38026d9d86ac5, []int{2}
}

func (m *GetHostType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostType.Unmarshal(m, b)
}
func (m *GetHostType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostType.Marshal(b, m, deterministic)
}
func (m *GetHostType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostType.Merge(m, src)
}
func (m *GetHostType) XXX_Size() int {
	return xxx_messageInfo_GetHostType.Size(m)
}
func (m *GetHostType) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostType.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostType proto.InternalMessageInfo

func (m *GetHostType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HostResponseType struct {
	Host                 string   `protobuf:"bytes,1,opt,name=Host,proto3" json:"Host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostResponseType) Reset()         { *m = HostResponseType{} }
func (m *HostResponseType) String() string { return proto.CompactTextString(m) }
func (*HostResponseType) ProtoMessage()    {}
func (*HostResponseType) Descriptor() ([]byte, []int) {
	return fileDescriptor_87c38026d9d86ac5, []int{3}
}

func (m *HostResponseType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostResponseType.Unmarshal(m, b)
}
func (m *HostResponseType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostResponseType.Marshal(b, m, deterministic)
}
func (m *HostResponseType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostResponseType.Merge(m, src)
}
func (m *HostResponseType) XXX_Size() int {
	return xxx_messageInfo_HostResponseType.Size(m)
}
func (m *HostResponseType) XXX_DiscardUnknown() {
	xxx_messageInfo_HostResponseType.DiscardUnknown(m)
}

var xxx_messageInfo_HostResponseType proto.InternalMessageInfo

func (m *HostResponseType) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87c38026d9d86ac5, []int{4}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterType)(nil), "proto.RegisterType")
	proto.RegisterType((*UnregisterType)(nil), "proto.UnregisterType")
	proto.RegisterType((*GetHostType)(nil), "proto.GetHostType")
	proto.RegisterType((*HostResponseType)(nil), "proto.HostResponseType")
	proto.RegisterType((*EmptyResponse)(nil), "proto.EmptyResponse")
}

func init() { proto.RegisterFile("registry_service.proto", fileDescriptor_87c38026d9d86ac5) }

var fileDescriptor_87c38026d9d86ac5 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x4a, 0x4d, 0xcf,
	0x2c, 0x2e, 0x29, 0xaa, 0x8c, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x66, 0x5c, 0x3c, 0x41, 0x60, 0x05, 0xa9, 0x45, 0x21,
	0x95, 0x05, 0xa9, 0x42, 0x42, 0x5c, 0x2c, 0x7e, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x9c, 0x41, 0x60, 0x36, 0x48, 0xcc, 0x23, 0xbf, 0xb8, 0x44, 0x82, 0x09, 0x22, 0x06, 0x62, 0x2b,
	0xa9, 0x70, 0xf1, 0x85, 0xe6, 0x15, 0x11, 0xd0, 0xa9, 0xa4, 0xc8, 0xc5, 0xed, 0x9e, 0x5a, 0x02,
	0xd2, 0x80, 0x53, 0x89, 0x1a, 0x97, 0x00, 0x48, 0x3e, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38,
	0x15, 0xa6, 0x0e, 0x6c, 0x21, 0x23, 0x92, 0x85, 0xfc, 0x5c, 0xbc, 0xae, 0xb9, 0x05, 0x25, 0x95,
	0x30, 0x85, 0x46, 0x07, 0x19, 0xb9, 0xf8, 0x83, 0xa0, 0x7e, 0x0b, 0x86, 0x78, 0x4d, 0xc8, 0x9c,
	0x8b, 0x03, 0xe6, 0x1b, 0x21, 0x61, 0x88, 0x47, 0xf5, 0x90, 0xbd, 0x27, 0x25, 0x02, 0x15, 0x44,
	0x31, 0x4a, 0x89, 0x41, 0xc8, 0x9a, 0x8b, 0x0b, 0xe1, 0x1d, 0x21, 0x51, 0xa8, 0x2a, 0x54, 0x1f,
	0xe2, 0xd4, 0x6c, 0xc1, 0xc5, 0x0e, 0xf5, 0xa5, 0x90, 0x10, 0x54, 0x09, 0x92, 0xaf, 0xa5, 0xc4,
	0xa1, 0x62, 0xe8, 0xde, 0x54, 0x62, 0x48, 0x62, 0x03, 0xcb, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xa0, 0x52, 0x65, 0x7b, 0xa5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistryServiceClient is the client API for RegistryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistryServiceClient interface {
	Register(ctx context.Context, in *RegisterType, opts ...grpc.CallOption) (*EmptyResponse, error)
	Unregister(ctx context.Context, in *UnregisterType, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetHost(ctx context.Context, in *GetHostType, opts ...grpc.CallOption) (*HostResponseType, error)
}

type registryServiceClient struct {
	cc *grpc.ClientConn
}

func NewRegistryServiceClient(cc *grpc.ClientConn) RegistryServiceClient {
	return &registryServiceClient{cc}
}

func (c *registryServiceClient) Register(ctx context.Context, in *RegisterType, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.RegistryService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) Unregister(ctx context.Context, in *UnregisterType, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/proto.RegistryService/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) GetHost(ctx context.Context, in *GetHostType, opts ...grpc.CallOption) (*HostResponseType, error) {
	out := new(HostResponseType)
	err := c.cc.Invoke(ctx, "/proto.RegistryService/GetHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistryServiceServer is the server API for RegistryService service.
type RegistryServiceServer interface {
	Register(context.Context, *RegisterType) (*EmptyResponse, error)
	Unregister(context.Context, *UnregisterType) (*EmptyResponse, error)
	GetHost(context.Context, *GetHostType) (*HostResponseType, error)
}

// UnimplementedRegistryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRegistryServiceServer struct {
}

func (*UnimplementedRegistryServiceServer) Register(ctx context.Context, req *RegisterType) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedRegistryServiceServer) Unregister(ctx context.Context, req *UnregisterType) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unregister not implemented")
}
func (*UnimplementedRegistryServiceServer) GetHost(ctx context.Context, req *GetHostType) (*HostResponseType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHost not implemented")
}

func RegisterRegistryServiceServer(s *grpc.Server, srv RegistryServiceServer) {
	s.RegisterService(&_RegistryService_serviceDesc, srv)
}

func _RegistryService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RegistryService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).Register(ctx, req.(*RegisterType))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RegistryService/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).Unregister(ctx, req.(*UnregisterType))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_GetHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).GetHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RegistryService/GetHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).GetHost(ctx, req.(*GetHostType))
	}
	return interceptor(ctx, in, info, handler)
}

var _RegistryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RegistryService",
	HandlerType: (*RegistryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _RegistryService_Register_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _RegistryService_Unregister_Handler,
		},
		{
			MethodName: "GetHost",
			Handler:    _RegistryService_GetHost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registry_service.proto",
}
